- hosts: ubuntu
  become: yes
  pre_tasks:
    - name: Get ansible_user home directory
      shell: 'getent passwd "{{ansible_ssh_user}}" | cut -d: -f6'
      register: ansible_home_result
    - name: Set the fact for the other scripts to use
      set_fact: ansible_home='{{ansible_home_result.stdout}}'
    - name: Set the fact for whoami
      set_fact: ansible_user="{{ansible_ssh_user}}"
  tasks:
    - name: "FIX: Ubuntu 16.04 LTS doesn't come with certain modules, required by ansible"
      raw: apt-get install python3-minimal aptitude -y
      become: true
      become_user: root
      become_method: sudo
    - name: apt update
      apt: update_cache=yes    
    - name: upgrade all packages
      apt: upgrade=full
    - name: install zsh
      apt: name=zsh
    - name: install wget
      apt: name=wget
    - name: install build-essential
      apt: name=build-essential
    - name: install git
      apt: name=git
    - name: check dotfiles
      shell: "test -d {{ ansible_home }}/dotfiles"
      register: dotfiles_result
      ignore_errors: true
    - name: check .vim/bundle
      shell: "test -d {{ ansible_home }}/.vim/bundle"
      register: bundle_result
      ignore_errors: true
    - name: clone bundle
      git:
        repo: http://github.com/gmarik/vundle.git
        dest: "{{ ansible_home }}/.vim/bundle/vundle"
      become: "{{ ansible_user }}"
      when: bundle_result is failed
    - name: clone dotfiles
      git:
        repo: https://github.com/azusa/dotfiles.git
        dest: "{{ ansible_home }}/dotfiles"
      become: "{{ansible_user}}"
      when: dotfiles_result is failed
    - name: link dotfiles
      file:
        src: "{{ ansible_home }}/dotfiles/.zshrc"
        dest: "{{ ansible_home }}/.zshrc"
        state: link
      become: "{{ ansible_user }}"
    - name: link dotfiles
      file:
        src: "{{ ansible_home }}/dotfiles/.vimrc"
        dest: "{{ ansible_home }}/.vimrc"
        state: "link"
      become: "{{ ansible_user }}"
    - name: apt install for rbenv
      apt: name="{{ item }}" state=present
      with_items:
        - ruby-build
    - name: check rbenv
      shell: grep rbenv "{{ ansible_home }}/.zshlocal"
      become: "{{ ansible_user }}"
      register: rbenv_result
      ignore_errors: true
    - name: install rbenv
      shell: |
        git clone https://github.com/sstephenson/rbenv.git ${HOME}/.rbenv
        git clone https://github.com/sstephenson/ruby-build.git ${HOME}/.rbenv/plugins/ruby-build
        echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ${HOME}/.zshrc
        echo 'export SHELL=/usr/bin/zsh' >> ${HOME}/.zshlocal
        echo 'eval "$(rbenv init - zsh)"' >> ${HOME}/.zshlocal
      become: "{{ ansible_user }}"
      when: rbenv_result is failed
    - name: check nodebrew
      shell: grep nodebrew "{{ ansible_home }}/.zshlocal"
      become: "{{ ansible_user }}"
      register: nodebrew_result
      ignore_errors: true
    - name: install nodebrew
      shell: |
        curl -L git.io/nodebrew | perl - setup
        echo 'export PATH=$HOME/.nodebrew/current/bin:$PATH' >> {{ ansible_home }}/.zshlocal
      become: "{{ansible_user }}"
      when: nodebrew_result is failed
    - user:
        name: "{{ansible_user }}"
        shell: /usr/bin/zsh
    - name: clone vim
      git:
        repo: https://github.com/vim/vim.git
        dest: /tmp/vim
    - name: check vim
      shell: test -f /usr/local/bin/vim
      register: vim_result
      ignore_errors: true
    - name: install vim
      shell: |
        cd /tmp/vim/src
        ./configure --prefix=/usr/local
        make
        make install
      when: vim_result is failed
    - name: link vi
      file: src=/usr/local/bin/vim dest=/usr/local/bin/vi state=link
    - name: apt install for gvm
      apt: 
        name: ['curl', 'git','mercurial', 'make', 'binutils', 'bison', 'gcc']
        state: present
#    - name: install gvm
#      shell: |
#         zsh < <(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)
#      become: "{{ ansible_user }}"
    - name: install sdkman
      shell: |
        curl -s "https://get.sdkman.io" | zsh
      become: "{{ ansible_user }}"
